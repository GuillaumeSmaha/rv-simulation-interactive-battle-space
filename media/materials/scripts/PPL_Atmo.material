
//Textures required:
//ambient_colour.png
//diffuse_colour.png
//specular_colour.png
//emissive_colour.png
//normals.png
//combined_default.png (this is for a pre-lit texture used in place of the colour and bump maps)

//I stopped short of sourcing the specular exponent from a texture as well, but you could do it if you wanted to.


material PPL_Atmo
{
	technique
	{
		//emissive/ambient (also clears the target to avoid unwanted transparency)
		pass
		{
			ambient 1 1 1

			vertex_program_ref PPL_Atmo/emissive_ambient_vp
			{
				param_named_auto worldViewProj worldviewproj_matrix
			}

			fragment_program_ref PPL_Atmo/emissive_ambient_fp
			{
				param_named_auto ambient ambient_light_colour
			}

			/*
            //texture used to determine material's ambient colour at each texel
			texture_unit
			{
				texture ambient_colour.png
				tex_coord_set 0
			}
			
            //texture used to determine material's emissive colour at each texel
			texture_unit
			{
				texture planetlights.jpg
				tex_coord_set 0
			}
			*/
		}
		

		//PPL pass 
		pass
		{
			ambient 0 0 0 
			iteration once_per_light
			scene_blend add

			vertex_program_ref PPL_Atmo/diffuse_and_specular_PPL_vp 
			{
				param_named fvInvWavelengths float3 0 0 0
				param_named fCameraHeightSqr float 0
				param_named fInnerRadius float 0
				param_named fOuterRadius float 0
				param_named fOuterRadiusSqr float 0
				param_named fKr4PI float 0
				param_named fKm4PI float 0
				param_named fKrESun float 0
				param_named fKmESun float 0
				param_named fScale float 0
				param_named fScaleOverScaleDepth float 0
			}

			fragment_program_ref PPL_Atmo/diffuse_and_specular_PPL_fp 
			{
				param_named fExposure float 0
			}

			// Normal Map
			texture_unit
			{
				texture_alias NormalMap
				texture defaultNormal.png
				colour_op replace
				tex_coord_set 0
			}
			
			// Base Map
			texture_unit
			{
				texture_alias Texture
				texture defaultTexture.png
				tex_coord_set 1
			}
			
			// Specular Map
			texture_unit
			{
				texture_alias SpecularMap
				texture defaultSpecular.png
				tex_coord_set 2
			}
			
		}
		
	}
}
